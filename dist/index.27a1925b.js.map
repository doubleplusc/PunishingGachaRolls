{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,sBAEA,MAAMC,EAAqBC,SAASC,eAAe,iBACnD,IAAIC,EAAcL,EAAAM,SAASC,WACvBC,EAAU,GACVC,EAASN,SAASO,cAAc,UAClBP,SAASC,eAAe,eAC1CK,EAAOE,KAAO,SACdH,EAAQI,KAAKH,EAAOI,WACpB,IAAK,MAAMC,KAAST,EAClBI,EAAOE,KAAOG,EAAMC,MACpBN,EAAOO,MAAQF,EAAMC,MACrBP,EAAQI,KAAKH,EAAOI,WAEtBX,EAAmBe,mBAAmB,YAAaT,EAAQU,KAAK,OAChEhB,EAAmBiB,iBAAiB,UAKpC,SAA2BC,GACzB,IAAIC,EAASD,EAAEE,OAAON,MAClBO,EAAcpB,SAASC,eAAe,uBAC3B,WAAXiB,GACFE,EAAYC,aAAa,MAAO,GAAGxB,EAAAM,SAASmB,YAAYJ,SACxDE,EAAYG,MAAMC,QAAU,MAE5BJ,EAAYC,aAAa,MAAO,GAAGxB,EAAAM,SAASmB,YAAYJ,SACxDE,EAAYG,MAAMC,QAAU,MAZXxB,SAASC,eAAe,UAChCe,iBAAiB,SAe9B,SAAwBC,GACtBA,EAAEQ,iBACFC,EAAiBC,YAGnBC,OAAS,IAAIC,OACN,MAAMC,EAAc,GAC3B,IAAI,MAAMC,KAAclC,EAAAmC,WACtBF,EAAYrB,KAAK,IAAIwB,EAAAC,OAAOH,IAE9B,MAAML,EAAmB,IAAIO,EAAAC,OAAO","sources":["src/main.js"],"sourcesContent":["import { unitData, bannerData } from \"./data.js\";\nimport { Banner } from \"./Banner.js\";\nconst bannerTargetSelect = document.getElementById(`select-target`);\nlet baseMemberA = unitData.aConstruct;\nlet options = [];\nlet option = document.createElement(`option`);\nlet pityCounter = document.getElementById(`pityCounter`);\noption.text = `Select`;\noptions.push(option.outerHTML);\nfor (const aRank of baseMemberA) {\n  option.text = aRank.frame;\n  option.value = aRank.frame;\n  options.push(option.outerHTML);\n}\nbannerTargetSelect.insertAdjacentHTML(`beforeEnd`, options.join(`\\n`));\nbannerTargetSelect.addEventListener(`change`, changeTargetImage);\nconst roll10Button = document.getElementById(`roll10`);\nroll10Button.addEventListener(`click`, roll10OfBanner);\n// need to programmatically set the selectable targets for the different banners. Can use a single helper function that uses callbacks on the different banners to generate\n\nfunction changeTargetImage(e) {\n  let choice = e.target.value;\n  let choiceImage = document.getElementById(`select-target-image`);\n  if (choice !== `Select`) {\n    choiceImage.setAttribute(`src`, `${unitData.assetPath}${choice}.png`);\n    choiceImage.style.opacity = 100; // there has to be a smarter way to hide the picture when the choice is select?\n  } else {\n    choiceImage.setAttribute(`src`, `${unitData.assetPath}${choice}.png`);\n    choiceImage.style.opacity = 0;\n  }\n}\n\nfunction roll10OfBanner(e) {\n  e.preventDefault();\n  baseMemberBanner.roll10();\n}\n\nchance = new Chance();\nexport const bannerTable = [];\nfor(const bannerType in bannerData){\n  bannerTable.push(new Banner(bannerType));\n}\nconst baseMemberBanner = new Banner(`baseMember`);"],"names":["$3ESMo","parcelRequire","$2b6e161c9edcf319$var$bannerTargetSelect","document","getElementById","$2b6e161c9edcf319$var$baseMemberA","unitData","aConstruct","$2b6e161c9edcf319$var$options","$2b6e161c9edcf319$var$option","createElement","text","push","outerHTML","aRank","frame","value","insertAdjacentHTML","join","addEventListener","e","choice","target","choiceImage","setAttribute","assetPath","style","opacity","preventDefault","$2b6e161c9edcf319$var$baseMemberBanner","roll10","chance","Chance","$2b6e161c9edcf319$export$3ec15227a1ffb05c","bannerType","bannerData","$bcFK1","Banner"],"version":3,"file":"index.27a1925b.js.map"}